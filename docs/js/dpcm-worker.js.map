{"version":3,"sources":["dpcm-worker.ts"],"names":[],"mappings":"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","file":"dpcm-worker.js","sourcesContent":["/// <reference path=\"wav-decoder.d.ts\" />\n\ndeclare var require, self;\nimport WavDecoder = require('wav-decoder');\n\n\n\n// JavaScript port of https://github.com/gocha/DPCMConverter\n\nexport interface IWavFileFormat {\n\tsampleRate: number;\n\tnumberOfChannels: number;\n\tsampleLength: number;\n\tstartSilence: number;\n\tendSilence: number;\n\tpreview: {\n\t\tmax: Float32Array;\n\t\tmin: Float32Array;\n\t}[];\n}\n\nexport interface IDPCMOptions {\n\tstereoMix?: boolean;\n\tstereoLeft?: boolean;\n\tnormalizeCheck?: boolean;\n\tinputVolumeCb?: number;\n\tdpcmSampleRateCb?: number;\n\tdmcAlignCheck?: boolean;\n\tstartPosition?: number;\n\tendPosition?: number;\n\tpreviewSize?: number;\n\tloop?: boolean;\n\tid?: number;\n}\n\nexport interface IDPCMResult {\n\tmml: string;\n\tpreview?: Float32Array;\n}\n\nexport const SAMPLERATE_DATAPROVIDER = [\n\t{ label: \"4.18KHz\", data: 0x00 },\n\t{ label: \"4.71KHz\", data: 0x01 },\n\t{ label: \"5.26KHz\", data: 0x02 },\n\t{ label: \"5.59KHz\", data: 0x03 },\n\t{ label: \"6.26KHz\", data: 0x04 },\n\t{ label: \"7.05KHz\", data: 0x05 },\n\t{ label: \"7.92KHz\", data: 0x06 },\n\t{ label: \"8.36KHz\", data: 0x07 },\n\t{ label: \"9.42KHz\", data: 0x08 },\n\t{ label: \"11.18KHz\", data: 0x09 },\n\t{ label: \"12.60KHz\", data: 0x0a },\n\t{ label: \"13.98KHz\", data: 0x0b },\n\t{ label: \"16.88KHz\", data: 0x0c },\n\t{ label: \"21.30KHz\", data: 0x0d },\n\t{ label: \"24.86KHz\", data: 0x0e },\n\t{ label: \"33.14KHz\", data: 0x0f }\n];\n\nconst DMC_TABLE = [\n\t0xD60, 0xBE0, 0xAA0, 0xA00, 0x8F0, 0x7F0, 0x710, 0x6B0,\n\t0x5F0, 0x500, 0x470, 0x400, 0x350, 0x2A0, 0x240, 0x1B0,\n];\n\nconst SILENCE_THRESHOLD = Math.pow(2.0, -6);\n\nexport function wav2dpcm(sampleRate: number, channelData: Float32Array[], opts?: IDPCMOptions): IDPCMResult {\n\tif (!opts) opts = {};\n\n\tvar i: number;\n\tvar j: number;\n\t\n\tif (opts.startPosition == null) opts.startPosition = 0;\n\tif (opts.endPosition == null) opts.endPosition = channelData[0].length;\n\tfor (i = 0; i < channelData.length; i++) {\n\t\tchannelData[i] = channelData[i].subarray(opts.startPosition, opts.endPosition);\n\t}\n\t\n\t// 前処理(チャンネル選択・ノーマライズ)\n\tvar samplesNum: number = channelData[0].length;\n\tvar maxLevel: number = 0.0;\n\tvar monodata: Float32Array = new Float32Array(samplesNum);\n\tif (channelData.length == 1) {\n\t\tfor (i = 0; i < samplesNum; i++) {\n\t\t\tvar current = channelData[0][i];\n\t\t\tmaxLevel = Math.max(maxLevel, Math.abs(current));\n\t\t\tmonodata[i] = current;\n\t\t}\n\t} else {\n\t\tif (opts.stereoMix) {\n\t\t\tfor (i = 0; i < samplesNum; i++) {\n\t\t\t\tvar current = (channelData[0][i] + channelData[1][i]) / 2;\n\t\t\t\tmaxLevel = Math.max(maxLevel, Math.abs(current));\n\t\t\t\tmonodata[i] = current;\n\t\t\t}\n\t\t} else {\n\t\t\tvar channel: number = opts.stereoLeft ? 0 : 1;\n\t\t\tfor (i = 0; i < samplesNum; i++) {\n\t\t\t\tvar current = channelData[channel][i];\n\t\t\t\tmaxLevel = Math.max(maxLevel, Math.abs(current));\n\t\t\t\tmonodata[i] = current;\n\t\t\t}\n\t\t}\n\t}\n\n\t// 入力音量の調整\n\tvar scale: number = opts.inputVolumeCb == null ? 1.0 : opts.inputVolumeCb;\n\tif (opts.normalizeCheck && 0 < maxLevel) scale /= maxLevel;\n\tfor (i = 0; i < monodata.length; i++) {\n\t\tmonodata[i] *= scale;\n\t}\n\n\t// リサンプリング\n\tvar dpcmSampleRate: number = sampleRate;\n\tvar sampleStep: number = 1;\n\tif (opts.dpcmSampleRateCb != null && opts.dpcmSampleRateCb != -1) {\n\t\tdpcmSampleRate = ((1789772.5 * 8) / DMC_TABLE[opts.dpcmSampleRateCb]);\n\t\t// サンプルレートの差が1.0未満なら変換しない\n\t\tif (Math.abs(dpcmSampleRate - sampleRate) >= 1.0) {\n\t\t\tsampleStep = dpcmSampleRate / sampleRate;\n\t\t}\n\t}\n\tvar sampleCount: number = sampleStep;\n\tvar resampdata: Float32Array = new Float32Array(monodata.length * (sampleStep + 1) + 128);\n\tj = 0;\n\ti = 0;\n\twhile (i < monodata.length) {\n\t\twhile (sampleCount > 0.0) {\n\t\t\tresampdata[j++] = monodata[i];\n\t\t\tsampleCount -= 1.0;\n\t\t}\n\t\twhile (sampleCount <= 0.0) {\n\t\t\tsampleCount += sampleStep;\n\t\t\t++i;\n\t\t}\n\t}\n\t// DPCM再生サイズ境界調整\n\tif (opts.dmcAlignCheck) {\n\t\t// 出力が 1+16n バイトになるよう入力サンプルを追加\n\t\tvar lastSample: number = resampdata[j - 1];\n\t\twhile ((resampdata.length - 8) % 128 != 0) {\n\t\t\tresampdata[j++] = lastSample;\n\t\t}\n\t}\n\tresampdata = resampdata.subarray(0, j);\n\t// ここからDMCconvベースの変換処理\n\tvar dpcmData: Uint8Array = new Uint8Array(Math.ceil(resampdata.length / 8));\n\tvar startdelta: number = Math.round((resampdata[0] + 1.0) / 2.0 * 127.0);\n\tvar delta: number = startdelta;\n\tvar dmcShift: number = 8;\n\tvar dmcBits: number = 0;\n\tvar dmcIncrease: Boolean = true;\n\tvar dmcIncreaseLast: Boolean = true;\n\tvar previewData: Float32Array = new Float32Array(opts.previewSize||512);\n\tvar previewPos: number = 0;\n\tvar previewStep: number = Math.ceil(resampdata.length / previewData.length);\n\tvar previewCount: number = previewStep;\n\tj = 0;\n\tfor (i = 0; i < resampdata.length; i++) {\n\t\tdmcBits >>= 1;\n\t\t\n\t\tpreviewData[previewPos] = Math.max(previewData[previewPos], Math.abs(resampdata[i]));\n\t\tif (--previewCount == 0) {\n\t\t\tpreviewCount = previewStep;\n\t\t\tpreviewPos++;\n\t\t}\n\n\t\tvar deltaFloat: number = (delta - 0x40) / 0x40;\n\t\tdmcIncrease = (resampdata[i] > deltaFloat);\n\t\t// 等しい場合は次のサンプルに基づいて決定(気休め)\n\t\tif (resampdata[i] == deltaFloat && (i + 1) < resampdata.length) {\n\t\t\tdmcIncrease = (resampdata[i + 1] > deltaFloat);\n\t\t\t// 次まで等しい場合は直前の変化に揃える(超気休め)\n\t\t\tif (resampdata[i + 1] == deltaFloat) {\n\t\t\t\tdmcIncrease = dmcIncreaseLast\n\t\t\t}\n\t\t}\n\n\t\tif (dmcIncrease) {\n\t\t\tif (delta < 126) {\n\t\t\t\tdelta += 2;\n\t\t\t}\n\t\t\tdmcBits |= 0x80;\n\t\t} else {\n\t\t\tif (delta > 1) {\n\t\t\t\tdelta -= 2;\n\t\t\t}\n\t\t}\n\t\tdmcIncreaseLast = dmcIncrease\n\n\t\tif (--dmcShift == 0) {\n\t\t\tdpcmData[j++] = dmcBits;\n\t\t\tdmcShift = 8;\n\t\t\tdmcBits = 0;\n\t\t}\n\t}\n\t\t\t\t\n\t// 初期音量に戻るまで出力\n\t//if(backToInitVolCheck.selected){\n\t//\twhile(delta != startdelta){\n\t//\t\tdmcBits >>= 1;\n\t//\t\tif(delta < startdelta){\n\t//\t\t\tdelta += 2;\n\t//\t\t\tdmcBits |= 0x80;\n\t//\t\t}else{\n\t//\t\t\tdelta -= 2;\n\t//\t\t}\n\t//\t\tif(--dmcShift == 0){\n\t//\t\t\tdpcmData[j++] = dmcBits;\n\t//\t\t\tdmcShift = 8;\n\t//\t\t\tdmcBits = 0;\n\t//\t\t}\n\t//\t}\n\t//}\n\t\t\t\t\n\t// 末尾の余りビットを出力\n\tif (dmcShift != 8) {\n\t\t// 最終音量を保つようにして出力\n\t\tvar dmcMask: number = (1 << dmcShift) - 1;\n\t\tdmcBits >>= (dmcShift - 1);\n\t\tdmcBits |= 0x55 & ~dmcMask;\n\t\tdpcmData[j++] = dmcBits;\n\t}\n\tdpcmData = dpcmData.subarray(0, j);\n\t\t\t\t\n\t// サイズチェック\n\tif (dpcmData.length > 0x0ff1) {\n\t\tthrow new Error('The generated data length is over the limit of DPCM.');\n\t}\n\tvar dpcmStr = btoa(String.fromCharCode.apply(null, new Uint8Array(dpcmData)));\n\n\t// ここからFlMML用コード出力\n\treturn {\n\t\tmml: `#WAV9 ${opts.id==null ? '$id' : opts.id},${startdelta},${opts.loop?1:0},${dpcmStr}`,\n\t\tpreview: previewData\n\t};\n}\n\nexport function wavFormat(audioData, previewSize: number): IWavFileFormat {\n\tvar len = audioData.channelData[0].length;\n\tvar result: IWavFileFormat = {\n\t\tsampleRate: audioData.sampleRate,\n\t\tnumberOfChannels: audioData.channelData.length,\n\t\tsampleLength: len,\n\t\tstartSilence: len,\n\t\tendSilence: len,\n\t\tpreview: []\n\t};\n\tfor (var ch = 0; ch < audioData.channelData.length; ch++) {\n\t\tvar data = audioData.channelData[ch];\n\t\tvar preview = {\n\t\t\tmax: new Float32Array(previewSize),\n\t\t\tmin: new Float32Array(previewSize)\n\t\t};\n\t\tresult.preview.push(preview);\n\t\tvar step = Math.ceil(data.length / preview.max.length);\n\t\tvar s = 0;\n\t\tvar j = 0;\n\t\tvar i;\n\t\tfor (i = 0; i < data.length; i++) {\n\t\t\tpreview.max[j] = Math.max(preview.max[j], data[i]);\n\t\t\tpreview.min[j] = Math.min(preview.min[j], data[i]);\n\t\t\tif (step <= ++s) {\n\t\t\t\ts = 0; j++;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < data.length; i++) {\n\t\t\tif (SILENCE_THRESHOLD <= Math.abs(data[i])) break;\n\t\t}\n\t\tresult.startSilence = Math.min(result.startSilence, i);\n\n\t\tfor (i = 0; i < data.length; i++) {\n\t\t\tif (SILENCE_THRESHOLD <= Math.abs(data[data.length - 1 - i])) break;\n\t\t}\n\t\tresult.endSilence = Math.min(result.endSilence, i);\n\t}\n\treturn result;\n}\n\n\nself.onmessage = function(e) {\n\n\tswitch (e.data.type) {\n\n\t\tcase 'format':\n\n\t\t\tWavDecoder.decode(e.data.buffer)\n\t\t\t\t.then((audioData) => {\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\ttype: 'format',\n\t\t\t\t\t\tresult: wavFormat(audioData, e.data.previewSize||512)\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((ex) => {\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\terror: ex.message\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\tbreak;\n\n\t\tcase 'convert':\n\n\t\t\tWavDecoder.decode(e.data.buffer)\n\t\t\t\t.then((audioData) => {\n\t\t\t\t\tvar result = wav2dpcm(\n\t\t\t\t\t\taudioData.sampleRate,\n\t\t\t\t\t\taudioData.channelData,\n\t\t\t\t\t\te.data.options\n\t\t\t\t\t);\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\ttype: 'convert',\n\t\t\t\t\t\tresult: result\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((ex) => {\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\terror: ex.message\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\tbreak;\n\t\t\n\t}\n};\n"],"sourceRoot":"/source/"}